"""
Django settings for leish_web_app project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
# Debug setting from environment
DEBUG = os.environ.get('DEBUG', '0') == '1'

# SECURITY WARNING: keep the secret key used in production secret!
def get_secret_key():
    """Get secret key from Docker secret file or environment variable"""
    secret_key_file = os.environ.get('DJANGO_SECRET_KEY_FILE')
    if secret_key_file and os.path.exists(secret_key_file):
        with open(secret_key_file, 'r') as f:
            return f.read().strip()

    # Fallback to environment variable
    secret_key = os.environ.get('DJANGO_SECRET_KEY')
    if secret_key:
        return secret_key

    # Development fallback (should not be used in production)
    if not DEBUG:  # This means if DEBUG=False (production mode)
        raise ValueError("SECRET_KEY must be provided in production environment!")

    return 'your-fallback-key-for-development-only'

SECRET_KEY = get_secret_key()


ALLOWED_HOSTS = [
    "leishmania.cbm.uam.es",
    "www.leishmania.cbm.uam.es",
    "127.0.0.1",
    "localhost",
    "150.244.205.86",
    "159.223.23.52"  # Testing server
]

CSRF_TRUSTED_ORIGINS = [
    "https://leishmania.cbm.uam.es",
    "http://150.244.205.86",
    "http://159.223.23.52",  # Testing server
    "http://localhost",
    "http://127.0.0.1"
]

# Application definition

INSTALLED_APPS = [
    "home",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "species.apps.SpeciesConfig"
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",  # i18n django internationalization
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "leish_web_app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            BASE_DIR / "templates"
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.i18n",  # i18n django internationalization
            ],
        },
    },
]

WSGI_APPLICATION = "leish_web_app.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    },
    "leishmania": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": "/opt/leish-web/databases/leishmania.db",
    }
}

DATABASE_ROUTERS = ["data.database_router.LeishmaniaRouter"]

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Default language (English)
LANGUAGE_CODE = "en"

# Supported languages
LANGUAGES = [
    ('en', 'English'),
    ('es', 'Espa√±ol'),
]

# Directory where translation files will be stored
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

TIME_ZONE = "UTC"

USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [
    BASE_DIR / "static"
]

# Directory where `collectstatic` will store files in production
STATIC_ROOT = BASE_DIR / "staticfiles"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
